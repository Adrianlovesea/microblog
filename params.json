{"name":"Microblog","tagline":"index.js","body":"ar express = require('express');\r\nvar router = express.Router();\r\nvar User = require('../models/user.js');\r\nvar crypto = require('crypto');\r\nvar Post = require('../models/post.js');\r\n/* GET home page. */\r\n\r\n\r\nrouter.get('/', function(req, res) {\r\n\tPost.get(null, function(err, posts) {\r\n\t\tif(err) {\r\n\t\t\tposts= [];\r\n\t\t}\r\n\t\tres.render('index', { \r\n\t\t\ttitle: '首页' ,\r\n\t\t\tposts: posts,\r\n\t\t});\r\n\t});\r\n});\r\n\r\nrouter.get('/reg', checkNotLogin);\r\n\r\nrouter.get('/reg', function(req, res) {\r\n\tres.render('reg', { title: '用户注册' });\r\n});\r\n\r\nrouter.post('/reg', checkNotLogin);\r\n\r\nrouter.post('/reg', function(req ,res) {\r\n\t//检验用户两次输入的口令是否一致\r\n\tif (req.body['password-repeat'] != req.body['password']) {\r\n\t\treq.flash('error', '两次输入的口令不一致');\r\n\t\treturn res.redirect('/reg');\r\n\t}\r\n\t//生成口令的散列值\r\n\tvar md5 = crypto.createHash('md5');\r\n\tvar password = md5.update(req.body.password).digest('base64');\r\n\tvar newUser = new User({\r\n\t\tname: req.body.username,\r\n\t\tpassword: password,\r\n\t});\r\n\tconsole.log('0');\r\n\t//检查用户名是否已经存在\r\n\tUser.get(newUser.name, function(err, user) {\r\n\t\tif (user)\r\n\t\t\terr = 'Username already exists.';\r\n\t\tif (err) {\r\n\t\t\treq.flash('error', err);\r\n\t\t\treturn res.redirect('/reg');\r\n\t\t}\r\n\t\tconsole.log('1');\r\n\t\t//如果不存在则新增用户\r\n\t\tnewUser.save(function(err) {\r\n\t\t\tconsole.log('2');\r\n\t\t\tif (err) {\r\n\t\t\t\tconsole.log('3');\r\n\t\t\t\treq.flash('error', err);\r\n\t\t\t\treturn res.redirect('/reg');\r\n\t\t\t}\r\n\t\t\tconsole.log('4');\r\n\t\t\treq.session.user = newUser;\r\n\t\t\treq.flash('success', '注册成功');\r\n\t\t\tres.redirect('/');\r\n\t\t});\r\n\t});\r\n});\r\n\r\nrouter.get('/login', checkNotLogin);\r\n\r\nrouter.get('/login', function(req, res) {\r\n\tres.render('login', { title: '用户登入',});\r\n});\r\n\r\nrouter.post('/login', checkNotLogin);\r\n\r\nrouter.post('/login', function(req, res) {\r\n\t//生成口令的散列值\r\n\tvar md5 = crypto.createHash('md5');\r\n\tvar password = md5.update(req.body.password).digest('base64');\r\n\tUser.get(req.body.username, function(err, user) {\r\n\t\tif (!user) {\t\r\n\t\t\treq.flash('error', '用户不存在');\r\n\t\t\treturn res.redirect('/login');\r\n\t\t}\r\n\t\tif (user.password != password) {\r\n\t\t\treq.flash('error', '用户口令错误');\r\n\t\t\tres.redirect('/login');\r\n\t\t}\r\n\t\treq.session.user = user;\r\n\t\treq.flash('success', '登入成功');\r\n\t\tres.redirect('/');\r\n\t});\r\n});\r\n\r\nrouter.get('/logout', checkLogin);\r\n\r\nrouter.get('/logout', function(req,res) {\r\n\treq.session.user = null;\r\n\treq.flash('success', '登出成功');\r\n\tres.redirect('/');\r\n});\r\n\r\n\r\n\r\nrouter.get('/u/:user', function(req, res) {\r\n\tUser.get(req.params.user, function(err, user) {\r\n\t\tif(!user) {\r\n\t\t\treq.flash('error', '用户不存在');\r\n\t\t\treturn res.redirect('/');\r\n\t\t}\r\n\t\tPost.get(user.name, function(err, posts) {\r\n\t\t\tif(err) {\r\n\t\t\t\treq.flash('error', err);\r\n\t\t\t\treturn res.redirect('/');\r\n\t\t\t}\r\n\t\t\tres.render('user',{\r\n\t\t\t\ttitle: user.name,\r\n\t\t\t\tposts: posts,\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n});\r\n\r\nrouter.post('/post', checkLogin);\r\n\r\nrouter.post('/post', function(req, res) {\r\n\tvar currentUser = req.session.user;\r\n\tvar post = new Post(currentUser.name, req.body.post);\r\n\tpost.save(function(err) {\r\n\t\tif(err){\r\n\t\t\treq.flash('error', err);\r\n\t\t\treturn res.redirect('/');\r\n\t\t}\r\n\t\treq.flash('success', '发表成功');\r\n\t\tres.redirect('/u/' + currentUser.name);\r\n\t});\r\n});\r\n\r\n\r\nfunction checkLogin(req, res, next){\r\n\tif(!req.session.user){\r\n\t\treq.flash('error', '未登入');\r\n\t\treturn res.redirect('/login');\r\n\t}\r\n\tnext();\r\n}\r\n\r\nfunction checkNotLogin(req, res, next) {\r\n\tif(req.session.user){\r\n\t\treq.flash('error', '已登入');\r\n\t\treturn res.redirect('/');\r\n\t}\r\n\tnext();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nmodule.exports = router;\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}